<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.azld.Dao.bookMapper" >
  <resultMap id="BaseResultMap" type="com.azld.model.book" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <id column="name" property="name" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="writer" property="writer" jdbcType="VARCHAR" />
    <result column="publictime" property="publictime" jdbcType="TIMESTAMP" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, description, writer, publictime, count, createtime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.azld.model.bookKey" >
    select 
    <include refid="Base_Column_List" />
    from book
    where id = #{id,jdbcType=INTEGER}
      and name = #{name,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryKeyID" resultMap="BaseResultMap" parameterType="com.azld.model.bookKey" >
    select 
    <include refid="Base_Column_List" />
    from book
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeyName" resultMap="BaseResultMap" parameterType="com.azld.model.bookKey" >
    select 
    <include refid="Base_Column_List" />
    from book
    where name = #{name,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryKeyDesc" resultMap="BaseResultMap" parameterType="com.azld.model.bookKey" >
    select 
    <include refid="Base_Column_List" />
    from book
    where name LIKE '%${name}%';
    <!-- 
    where name LIKE CONCAT(CONCAT('%', #{name,jdbcType=VARCHAR}), '%');
     -->
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.azld.model.bookKey" >
    delete from book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.azld.model.book" >
    insert into book (id, name, description, 
      writer, publictime, count, 
      createtime)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{writer,jdbcType=VARCHAR}, #{publictime,jdbcType=TIMESTAMP}, #{count,jdbcType=INTEGER}, 
      now())
  </insert>
  <insert id="insertSelective" parameterType="com.azld.model.book" >
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="writer != null" >
        writer,
      </if>
      <if test="publictime != null" >
        publictime,
      </if>
      <if test="count != null" >
        count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="writer != null" >
        #{writer,jdbcType=VARCHAR},
      </if>
      <if test="publictime != null" >
        #{publictime,jdbcType=TIMESTAMP},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.azld.model.book" >
    update book
    <set >
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="writer != null" >
        writer = #{writer,jdbcType=VARCHAR},
      </if>
      <if test="publictime != null" >
        publictime = #{publictime,jdbcType=TIMESTAMP},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.azld.model.book" >
    update book
    set description = #{description,jdbcType=VARCHAR},
      writer = #{writer,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      publictime = #{publictime,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>